// Based on "Coding "Snake" in 4 min 30 sec (plain browser JavaScript)" by Chris DeLeon
// https://www.youtube.com/watch?v=xGmXxpIj6vs
// refactored to be a bit less hacky and fit with fyro

class Point
{
	var x;
	var y;

	fun init(x, y)
	{
		this.x = x;
		this.y = y;
	}
}

class GameState
{
	// player x y
	var px = 10;
	var py = 10;

	// input
	var xv = 0;
	var yv = 0;

	// game scale
	var gs = 20;

	// tile count
	var tc = 20;

	// apple x y
	var ax = 15;
	var ay = 15;

	var trail = [];
	var tail = 5;

	var accum = 0.0;

	var random = new fyro.Random();

	var playing = false;

	fun update(dt)
	{
		var upper = 0.8;
		var time = 0.3;

		// handle input
		var input = fyro.get_input();
		if(input.current.axis_left_x < -upper) { this.playing = true; this.xv = -1;  this.yv =  0; }
		if(input.current.axis_left_y < -upper) { this.playing = true; this.xv =  0;  this.yv = -1; }
		if(input.current.axis_left_x >  upper) { this.playing = true; this.xv =  1;  this.yv =  0; }
		if(input.current.axis_left_y >  upper) { this.playing = true; this.xv =  0;  this.yv =  1; }

		this.accum += dt;
		if( this.accum < time) { return; }
		this.accum -= time;

		if(this.playing)
		{
			this.px += this.xv;
			this.py += this.yv;
		}

		// wrap around
		if(this.px < 0) { this.px= this.tc-1; }
		if(this.px > this.tc-1) { this.px = 0; }
		if(this.py < 0) { this.py= this.tc-1; }
		if(this.py > this.tc-1) { this.py = 0; }

		// collision with tail
		if(this.playing)
		{
			for(var i=0; i<this.trail.len(); i+= 1)
			{
				if(this.trail[i].x == this.px and this.trail[i].y == this.py)
				{
					input.run_haptics(1.0, 1.0);
					this.tail = 5;
					this.trail = [];
					this.playing = false;
				}
			}
		}

		// move tail
		this.trail.push(new Point(this.px, this.py));
		while(this.trail.len() > this.tail)
		{
			this.trail.remove_front();
		}

		// eat apple
		if(this.ax == this.px and this.ay == this.py)
		{
			this.tail+=1;
			this.ax = this.random.next_int(this.tc);
			this.ay = this.random.next_int(this.tc);
			input.run_haptics(0.5, 0.25);
		}
	}

	fun render(cmd)
	{
		// cmd.extend(200, 200);
		cmd.windowbox(this.gs * this.tc, this.gs * this.tc);

		var background = fyro.rgb.light_gray;
		var snake = fyro.rgb.light_green;
		var apple = fyro.rgb.red;

		cmd.clear(background);
	
		for(var i=0; i < this.trail.len(); i+=1)
		{
			cmd.rect(snake, this.trail[i].x*this.gs, this.trail[i].y*this.gs, this.gs-2, this.gs-2);
		}
		
		cmd.rect(apple, this.ax * this.gs, this.ay * this.gs, this.gs-2, this.gs-2);
	}
}

fyro.set_state(new GameState());
