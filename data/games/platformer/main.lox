var random = new fyro.Random();
var BLOCK_SIZE = 50;
var GAME_SIZE = 200;
var PLAYER_SIZE = 22;
var RUN_TIMER = 0.1;

fun abs(x)
{
	if(x >= 0) { return x;}
	else { return -x; }
}

fun sign(x)
{
	if(x >= 0) { return 1;}
	else { return -1; }
}

class PlayerAnim
{
	public var idle;
	public var run;
	public var jump;
	public var fall;

	public fun init(name)
	{
		this.idle = fyro.load_sprite("gfx/Main Characters/" + name + "/Idle (32x32).png", 11, 1, 0.05, []);
		this.idle.set_size(32, 32);
		this.idle.align(0.5, 0);

		this.run = fyro.load_sprite("gfx/Main Characters/" + name + "/Run (32x32).png", 12, 1, 0.05, []);
		this.run.set_size(32, 32);
		this.run.align(0.5, 0);

		this.jump = fyro.load_sprite("gfx/Main Characters/" + name + "/Jump (32x32).png", 1, 1, 0.05, []);
		this.jump.set_size(32, 32);
		this.jump.align(0.5, 0);

		this.fall = fyro.load_sprite("gfx/Main Characters/" + name + "/Fall (32x32).png", 1, 1, 0.05, []);
		this.fall.set_size(32, 32);
		this.fall.align(0.5, 0);
	}
}

var pinkman = new PlayerAnim("Pink Man");

class Player : Actor
{
	public var input;
	public var dy = 0;
	public var facing_right = true;

	public var run_timer = 0;
	public var floor_timer = 0;

	public fun init()
	{
		super();
		this.set_lrud(-7, 7, PLAYER_SIZE, 0);

		// hope we don't collide here
		this.x = 100;
		this.y = 175;
	}

	public fun update(dt)
	{
		var gravity = 160;
		var speed = 50;
		this.dy -= dt * gravity;
		this.move_x(speed * dt * this.input.current.axis_left_x);
		var collided = this.move_y(this.dy * dt);
		if(collided)
		{
			this.dy = 0;
			this.floor_timer = 0;
		}
		else
		{
			this.floor_timer += dt;
		}

		if(this.run_timer > 0)
		{
			this.run_timer -= dt;
		}

		if(abs(this.input.current.axis_left_x) > 0.1)
		{
			this.run_timer = RUN_TIMER;

			this.facing_right = this.input.current.axis_left_x > 0;
		}

		if(this.input.current.button_x and this.input.last.button_x == false)
		{
			this.dy = 100;
		}
	}

	public fun render(cmd)
	{
		var char = pinkman;
		// cmd.rect(fyro.rgb.red, this.x, this.y, this.width, this.height);
		var anim = char.idle;
		if(this.run_timer > 0)
		{
			anim = char.run;
		}
		if(this.floor_timer > 0.2 )
		{
			if(this.dy > 0)
			{
				anim = char.jump;
			}
			else
			{
				anim = char.fall;
			}
		}
		cmd.sprite(anim, this.x, this.y, !this.facing_right, false);
	}
}

class GameState
{
	public var level;
	public var player;

	public fun init()
	{
		this.start();
	}

	public fun start()
	{
		this.level = new fyro.Level();
		this.level.load_tmx("level1.tmx");
		this.player = new Player();
		this.level.add(this.player);
	}

	public fun update(dt)
	{
		this.player.input = fyro.get_input();
		this.level.update(dt);

		if(this.player.y < -PLAYER_SIZE)
		{
			this.start();
		}
	}

	public fun render(cmd)
	{
		cmd.windowbox(GAME_SIZE, GAME_SIZE);
		cmd.clear(fyro.rgb.dark_gray);
		this.level.render(cmd);
	}
}

fyro.set_state(new GameState());
